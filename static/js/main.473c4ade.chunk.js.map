{"version":3,"sources":["components/form/index.ts","components/Button/Button.style.ts","components/Button/Button.tsx","components/form/FieldWrapper/FieldWrapper.style.ts","components/form/FieldWrapper/FieldWrapper.tsx","components/form/Form/Form.tsx","components/form/Input/Input.tsx","components/form/NumberInput/NumberInput.tsx","components/form/SubmitButton/SubmitButton.tsx","components/form/Select/Select.style.ts","components/form/Select/Select.tsx","state/todos/types.ts","routes/routesMap.ts","routes/constants.ts","routes/actions.ts","routes/index.ts","routes/onBeforeChange.ts","state/todos/actions.ts","state/todos/reducer.ts","components/Todo/useTodo.tsx","state/todos/selectors.ts","state/todos/index.ts","state/root-reducer.ts","state/persistTodosMiddleware.ts","theme/mediaQuery.ts","theme/index.ts","theme/height.ts","theme/padding.ts","theme/palette.ts","theme/width.ts","theme/zIndex.ts","theme/global.style.tsx","components/RouteSwitch.tsx","components/TodosTitle/TodosTitle.style.ts","components/TodosTitle/TodosTitle.tsx","components/ManageButton/ManageButton.style.ts","components/ManageButton/ManageButton.tsx","components/Layout/Layout.style.ts","components/Layout/Layout.tsx","components/Container/Container.style.ts","components/Container/Container.tsx","components/DeleteConfirm/DeleteConfirm.style.ts","components/DeleteConfirm/DeleteConfirm.tsx","components/TodoForm/ConditionalInputs.tsx","components/TodoForm/TodoForm.style.ts","components/TodoForm/TodoForm.tsx","index.tsx","components/Todo/TodoComplete.style.ts","components/Todo/TodoComplete.tsx","components/Todo/Todo.style.ts","components/Todo/Todo.tsx","components/AddTodo/AddTodo.style.ts","components/AddTodo/AddTodo.tsx","pages/HomePage/HomePage.tsx","App.tsx","state/index.ts"],"names":["theme","width","padding","global","background","palette","brand","color","brandOffset","fontWeight","lineHeight","fontSize","border","borderRadius","cursor","outline","Button","children","rest","type","css","style","position","FieldWrapper","name","label","error","className","htmlFor","message","Form","onSubmit","validate","options","validationResolver","useCallback","values","errors","Object","keys","length","methods","useForm","submitFunc","a","handleSubmit","Input","useFormContext","register","required","id","ref","integer","setValue","getValues","unregister","formValue","useState","strValue","setStrValue","handleChange","event","value","target","numberValue","parseInt","parseFloat","undefined","useEffect","onChange","onBlur","SubmitButton","formState","dirty","isSubmitting","disabled","Select","map","idx","key","TodoType","routesMap","path","createAction","connectRoutes","basename","onBeforeChange","dispatch","getState","bag","restoreScroll","routeEnhancer","enhancer","routerMiddleware","middleware","reducer","setManaging","ac","flag","updateTitle","title","setEditing","addTodo","params","deleteTodo","updateTodo","data","completeTodo","resetTodo","TodoDisplay","defaultInitialState","managing","todaysDate","Date","toISOString","todos","BASIC","completed","createReducer","todosJSON","window","localStorage","getItem","JSON","parse","today","storedDate","clearTodos","getFullYear","getMonth","getDate","todo","err","getInitialState","handleAction","state","action","payload","editing","todoIdx","slice","filter","_","getTodoState","getManaging","createSelector","getEditing","getTitle","getTodos","combineReducers","location","persistTodosMiddleware","api","next","includes","setItem","stringify","breakpoints","s","m","l","xl","height","header","footer","mediaQuery","primary","success","successOffset","warning","warningOffset","danger","dangerOffset","zIndex","main","navigation","styles","html","minHeight","display","flex","body","margin","fontFamily","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","justifyContent","h1","textAlign","GlobalStyle","RouteSwitch","routes","DefaultComponent","defaultComponent","transition","useSelector","routeMatched","routeComponents","routeType","isCurrentRoute","RouteTransitionComponent","in","push","RouteComponent","font","backgroundColor","borderBottom","transform","borderColor","TodosTitle","selectors","isManaging","useDispatch","actions","defaultValues","placeholder","ManageButton","toggleManaging","onClick","maxWidth","top","left","flexDirection","alignItems","right","paddingLeft","paddingRight","bottom","paddingTop","paddingBottom","marginTop","Layout","Container","DeleteConfirm","confirmDelete","confirm","ConditionalInputs","todoType","watch","TARGET","marginBottom","gridTemplateColumns","transfrom","gridColumnGap","cancelBtnStyle","TodoForm","onCancel","MULTIPLE","Component","marginLeft","TodoComplete","cx","complete","Array","from","Math","min","deleteBtn","resetBtn","Todo","useMemo","EDIT","MANAGE","VIEW","edit","cancelEdit","update","useTodo","index","addBtnStyle","AddTodo","isAdding","setAdding","cancel","addNewTodo","HomePage","App","store","createReduxStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"iHAAA,wR,mDCGe,G,KAAA,SAACA,GAAD,MAA8B,CAC3CC,MAAO,OACPC,QAASF,EAAME,QAAQC,OACvBC,WAAYJ,EAAMK,QAAQC,MAC1BC,MAAOP,EAAMK,QAAQG,YACrBC,WAAY,OACZC,WAAY,EACZC,SAAU,GACVC,OAAQ,EACRC,aAAc,EACdC,OAAQ,UACRC,QAAS,U,OCCIC,IAXyD,SAAC,GAGlE,IAFLC,EAEI,EAFJA,SACGC,EACC,4BACJ,OACE,kCAAQC,KAAK,UAAaD,EAA1B,CAAgCE,IAAKC,IAClCJ,K,yCCPQ,WAACjB,GAAD,MAA8B,CAC3CsB,SAAU,a,OC8BGC,IA1BoC,SAAC,GAM7C,IALLN,EAKI,EALJA,SACAO,EAII,EAJJA,KACAC,EAGI,EAHJA,MAEAC,EACI,EADJA,MAEA,OACE,mBAAKN,IAAKC,EAAOM,UAAU,iBACzB,uBACGF,GACC,qBAAOG,QAASJ,GAAOC,IAG3B,uBACGR,GAEH,uBACGS,GACC,uBAAMA,EAAMG,a,+FCiCPC,IA7BF,YAKQ,IAJnBb,EAIkB,EAJlBA,SAIkB,IAHlBc,gBAGkB,MAHP,aAGO,EAFlBC,EAEkB,EAFlBA,SACGC,EACe,kDACZC,EAAqBC,uBAAY,SAACC,GACtC,IAAMC,EAASL,EAAWA,EAASI,GAAU,GAG7C,MAAO,CACLC,SACAD,OAJeE,OAAOC,KAAKF,GAAQG,OAAS,EAIzB,GAAKJ,KAEzB,CAACJ,IACES,EAAUC,YAAO,aAAMR,sBAAuBD,IAC9CU,EAAaR,sBAAW,uCAAC,WAAOC,GAAP,SAAAQ,EAAA,sEACvBb,EAASK,GADc,2CAAD,sDAE3B,CAACL,IAEJ,OACE,YAAC,IAAgBU,EACf,oBAAMV,SAAUU,EAAQI,aAAaF,IAClC1B,M,mGCjCM6B,IAZsB,SAAC,GAAuB,IAArBtB,EAAoB,EAApBA,KAASN,EAAW,0BAC7B6B,cAArBC,EADkD,EAClDA,SACFtB,EAFoD,EACxCW,OACGb,GAGrB,OACE,YAAC,IAAD,CAAcA,KAAMA,EAAMC,MAAOP,EAAKO,MAAOwB,SAAU/B,EAAK+B,SAAUvB,MAAOA,GAC3E,mCAAWR,EAAX,CAAiBM,KAAMA,EAAM0B,GAAI1B,EAAM2B,IAAKH,Q,wFC0CnCF,IAhDsB,SAAC,GAAgC,IAA9BtB,EAA6B,EAA7BA,KAAM4B,EAAuB,EAAvBA,QAAYlC,EAAW,oCAO/D6B,cALFV,EAFiE,EAEjEA,OACAgB,EAHiE,EAGjEA,SACAC,EAJiE,EAIjEA,UACAN,EALiE,EAKjEA,SACAO,EANiE,EAMjEA,WAEI7B,EAAQW,EAAOb,GAGfgC,EADSF,IACU9B,GAX0C,EAYnCiC,mBAAQ,OAACD,QAAD,IAACA,IAAa,IAZa,mBAY5DE,EAZ4D,KAYlDC,EAZkD,KAc7DC,EAAezB,uBAAY,SAAC0B,GAChC,IAAMC,EAAQD,EAAME,OAAOD,MAG3B,GADAH,EAAYG,GACRA,EAAO,CACT,IAAME,EAAcZ,EAAUa,SAASH,GAASI,WAAWJ,GAC3DT,EAAS7B,EAAMwC,QAEfX,EAAS7B,OAAM2C,KAEhB,CAAC3C,EAAM6B,EAAUD,IASpB,OAPAgB,qBAAU,WAER,OADApB,EAAS,CAAExB,OAAML,KAAM,WAChB,WACLoC,EAAW/B,MAEZ,CAACA,EAAMwB,EAAUO,IAGlB,YAAC,IAAD,CAAc/B,KAAMA,EAAMC,MAAOP,EAAKO,MAAOwB,SAAU/B,EAAK+B,SAAUvB,MAAOA,GAC3E,mCACMR,EADN,CAEEM,KAAMA,EACN0B,GAAI1B,EACJL,KAAK,SACLkD,SAAUT,EACVU,OAAQV,EACRE,MAAOJ,Q,gFC3BAa,IAlB+D,SAAC,GAGxE,IAFLtD,EAEI,EAFJA,SACGC,EACC,8BAMA6B,cAJFyB,UACEC,EAHA,EAGAA,MACAC,EAJA,EAIAA,aAIJ,OACE,YAAC,IAAD,eAAYxD,EAAZ,CAAkBC,KAAK,SAASwD,UAAWF,IACxCC,EAAe,MAAQzD,K,iECjBf,WAACjB,GAAD,MAA8B,CAC3CsB,SAAU,a,OCoCGsD,IAtBwB,SAAC,GAIjC,IAHLpD,EAGI,EAHJA,KACAS,EAEI,EAFJA,QACGf,EACC,oCACyB6B,cAArBC,EADJ,EACIA,SACFtB,EAFF,EACcW,OACGb,GAGrB,OACE,YAACD,EAAA,EAAD,CAAcC,KAAMA,EAAMC,MAAOP,EAAKO,MAAOwB,SAAU/B,EAAK+B,SAAUvB,MAAOA,GAC3E,sBAAQN,IAAKC,EAAOG,KAAMA,EAAM0B,GAAI1B,EAAM2B,IAAKH,GAC5Cf,EAAQ4C,KAAI,WAAmBC,GAAnB,IAAGrD,EAAH,EAAGA,MAAOqC,EAAV,EAAUA,MAAV,OACX,sBAAQiB,IAAKjB,EAAOA,MAAOA,GACxBrC,U,6pBChCDuD,E,gGCKCC,EAAoB,eCJR,YDMV,CACXC,KAAM,M,UECcC,uBDRC,aEUrBC,YAAcH,EAAW,CAC3BI,SAAkD,eAClDC,eCT4B,SAACC,EAAoBC,EAAuBC,GAC1DD,KDSdE,cAAeA,SANLC,E,EAAVC,SACYC,E,EAAZC,WAoBaC,E,EAnBbA,Q,cENWC,EAAcb,uBAAa,uBAAuB,SAAAc,GAAE,OAAI,SAACC,GAAD,OAAmBD,EAAGC,OAC9EC,EAAchB,uBAAa,uBAAuB,SAAAc,GAAE,OAAI,SAACG,GAAD,OAAmBH,EAAGG,OAC9EC,EAAalB,uBAAa,sBAAsB,SAAAc,GAAE,OAAI,SAACnB,GAAD,OAAkBmB,EAAGnB,OAC3EwB,EAAUnB,uBAAa,cAAc,SAAAc,GAAE,OAAI,SAACM,GAAD,OAAsCN,EAAGM,OACpFC,EAAarB,uBAAa,iBAAiB,SAAAc,GAAE,OAAI,SAACnB,GAAD,OAAiBmB,EAAGnB,OACrE2B,EAAatB,uBAAa,iBACrC,SAAAc,GAAE,OAAI,SAACnB,EAAa4B,GAAd,OAAiDT,EAAG,CAAEnB,MAAK4B,aAEtDC,EAAexB,uBAAa,mBAAmB,SAAAc,GAAE,OAAI,SAACnB,GAAD,OAAiBmB,EAAGnB,OACzE8B,EAAYzB,uBAAa,gBAAgB,SAAAc,GAAE,OAAI,SAACnB,GAAD,OAAiBmB,EAAGnB,Q,SNbpEE,K,cAAAA,E,oBAAAA,E,iBAAAA,M,KOcL,ICVK6B,EDUCC,EAAmC,CAC9CC,UAAU,EACVX,MAAO,kBACPY,YAAY,IAAIC,MAAOC,cACvBC,MAAO,CAAC,CACNf,MAAO,wBACPjF,KAAM6D,EAASoC,MACfC,UAAW,KAiIAtB,EAzFCuB,wBAnCe,WAC7B,IAAMC,EAAYC,OAAOC,aAAaC,QAAQ,SAE9C,GAAIH,EACF,IACE,IAAMb,EAAoBiB,KAAKC,MAAML,GAG/BM,EAAQ,IAAIZ,KACZa,EAAa,IAAIb,KAAKP,EAAKM,YAC3Be,EAAaD,EAAWE,gBAAkBH,EAAMG,eACpDF,EAAWG,aAAeJ,EAAMI,YAChCH,EAAWI,YAAcL,EAAMK,UAG3Bf,EAAQT,EAAKS,MAAMtC,KAAI,SAAAsD,GAAI,kCAC5BA,GAD4B,IAE/Bd,UAAWU,EAAa,EAAII,EAAKd,eAGnC,MAAO,CACLN,SAA2B,IAAjBI,EAAM3E,OAChB4D,MAAOM,EAAKN,MACZY,YAAY,IAAIC,MAAOC,cACvBC,SAEF,MAAMiB,GACN,OAAOtB,EAIX,OAAOA,EAI8CuB,IACpDC,aAAatC,GAAa,SAACuC,EAAOC,GAAR,mBAAC,eACvBD,GADsB,IAEzBxB,SAAUyB,EAAOC,QACjBC,QAAUF,EAAOC,QAAsBF,EAAMG,aAAlBvE,OAE5BmE,aAAanC,GAAa,SAACoC,EAAOC,GAAR,mBAAC,eACvBD,GADsB,IAEzBnC,MAAOoC,EAAOC,aAEfH,aAAajC,GAAY,SAACkC,EAAOC,GAAR,mBAAC,eACtBD,GADqB,IAGxBG,QAASH,EAAMxB,SAAWyB,EAAOC,aAAUtE,OAE5CmE,aAAahC,GAAS,SAACiC,EAAOC,GAAR,mBAAC,eACnBD,GADkB,IAErBpB,MAAM,GAAD,mBACAoB,EAAMpB,OADN,4BAGEqB,EAAOC,SAHT,IAIDpB,UAAW,WAIhBiB,aAAa7B,GAAY,SAAC8B,EAAOC,GAChC,IAAMG,EAAUH,EAAOC,QAAQ3D,IACzBqD,EAAOI,EAAMpB,MAAMwB,GAEzB,OAAIR,EACK,2BACFI,GADL,IAEEG,aAASvE,EACTgD,MAAM,GAAD,mBACAoB,EAAMpB,MAAMyB,MAAM,EAAGD,IADrB,4BAGER,GACAK,EAAOC,QAAQ/B,OAJjB,YAMA6B,EAAMpB,MAAMyB,MAAMD,EAAU,OAK9BJ,KAERD,aAAa9B,GAAY,SAAC+B,EAAOC,GAAR,mBAAC,eACtBD,GADqB,IAExBpB,MAAOoB,EAAMpB,MAAM0B,QAAO,SAACC,EAAGhE,GAAJ,OAAYA,IAAQ0D,EAAOC,gBAEtDH,aAAa3B,GAAc,SAAC4B,EAAOC,GAClC,IAAMG,EAAUH,EAAOC,QACjBN,EAAOI,EAAMpB,MAAMwB,GAEzB,OAAIR,EACK,2BACFI,GADL,IAEEpB,MAAM,GAAD,mBACAoB,EAAMpB,MAAMyB,MAAM,EAAGD,IADrB,4BAGER,GAHF,IAIDd,UAAWc,EAAKd,UAAY,KAJ3B,YAMAkB,EAAMpB,MAAMyB,MAAMD,EAAU,OAI9BJ,KAERD,aAAa1B,GAAW,SAAC2B,EAAOC,GAC/B,IAAMG,EAAUH,EAAOC,QACjBN,EAAOI,EAAMpB,MAAMwB,GAEzB,OAAIR,EACK,2BACFI,GADL,IAEEpB,MAAM,GAAD,mBACAoB,EAAMpB,MAAMyB,MAAM,EAAGD,IADrB,4BAGER,GAHF,IAIDd,UAAW,KAJV,YAMAkB,EAAMpB,MAAMyB,MAAMD,EAAU,OAI9BJ,K,QEhJEQ,EAAe,SAACR,GAAD,OAAsBA,EAAMpB,OAC3C6B,EAAcC,YAAeF,GAAc,SAAAR,GAAK,OAAIA,EAAMxB,YAC1DmC,EAAaD,YAAeF,GAAc,SAAAR,GAAK,OAAIA,EAAMG,WACzDS,EAAWF,YAAeF,GAAc,SAAAR,GAAK,OAAIA,EAAMnC,SACvDgD,EAAWH,YAAeF,GAAc,SAAAR,GAAK,OAAIA,EAAMpB,SCKrDpB,ICPAsD,4BAAgB,CAC7BC,WACAnC,UCJWoC,EAAqC,SAAAC,GAAG,OAAI,SAAAC,GAAI,OAAI,SAACjB,GAAuB,IAC/EhD,EAAagE,EAAbhE,SAIR,GAHAiE,EAAKjB,GAGsB,kBAAhBA,EAAOrH,MAAqBqH,EAAOrH,KAAKuI,SAAS,UAAW,CACrE,IAAMnB,EAAmB/C,IACzBgC,OAAOC,aAAakC,QAAQ,QAAShC,KAAKiC,UAAUrB,EAAMpB,Y,QCNxD0C,EAAc,CAClBC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,GAAI,MCWSjK,EAXD,CACZkK,OCJ6B,CAC7BC,OAAQ,GACRC,OAAQ,IDGRC,WDCwB,CACxBR,cACAC,EAAE,qBAAD,OAAuBD,EAAYC,EAAnC,OACDC,EAAE,qBAAD,OAAuBF,EAAYE,EAAnC,OACDC,EAAE,qBAAD,OAAuBH,EAAYG,EAAnC,OACDC,GAAG,qBAAD,OAAuBJ,EAAYI,GAAnC,QCLF/J,QEXqB,CACrBC,OAAQ,GFWRE,QGZqB,CACrBiK,QAAS,kBACThK,MAAO,aACPE,YAAa,UACb+J,QAAS,UACTC,cAAe,UACfC,QAAS,UACTC,cAAe,UACfC,OAAQ,UACRC,aAAc,WHId3K,MIbmB,GJcnB4K,OKdoB,CACpBC,KAAM,EACNX,OAAQ,IACRY,WAAY,M,OCARC,EAAoB,CACxBC,KAAM,CACJC,UAAW,QAEb,0BAA2B,CAEzBC,QAAS,OACTC,KAAM,GAERC,KAAM,CACJC,OAAQ,EACRC,WAAY,oJACZC,oBAAqB,cACrBC,oBAAqB,aAEvB,IAAK,CACHC,UAAW,cAEb,OAAQ,CACNP,QAAS,OACTQ,eAAgB,UAIlBC,GAAI,CACFN,OAAQ,EACR3K,SAAU,GACVkL,UAAW,WAMAC,EAFK,kBAAM,YAAC,IAAD,CAAQd,OAAQ5J,YAAI4J,EAAD,UCiB9Be,EAtCK,SAAC,GAIP,IAAD,IAHXC,cAGW,MAHF,GAGE,EAFOC,EAEP,EAFXC,iBACAC,EACW,EADXA,WAEM7C,EAAW8C,aAAY,SAAC7D,GAAD,OAAsBA,EAAMe,YAGzD,GAAI6C,EAAY,CACd,IAAIE,GAAe,EACbC,EAAkBhK,OAAOC,KAAKyJ,GAAQnH,KAAI,SAAA0H,GAC9C,IAAMC,EAAiBlD,EAASnI,OAASoL,EACzCF,EAAeA,GAAgBG,EAE/B,IAAMC,EAA2BT,EAAOO,GAExC,OAAO,YAACE,EAAD,CAA0B1H,IAAG,UAAKoH,EAAL,YAAmBI,GAAajD,SAAUA,EAAUoD,GAAIF,OAS9F,OANIP,GACFK,EAAgBK,KACd,YAACV,EAAD,CAAkBlH,IAAG,UAAKoH,EAAL,YAA2B7C,SAAUA,EAAUoD,IAAKL,KAItE,4BAAGC,GAIZ,IAAMM,EAAiBZ,EAAO1C,EAASnI,OAAS8K,EAEhD,OAAIW,EACK,YAACA,EAAD,CAAgBtD,SAAUA,EAAUoD,IAAE,IAGxC,M,QC7CM,YAAC1M,GAAD,MAA8B,CAC3CsB,SAAU,WAEV,UAAW,CACTA,SAAU,WACVV,OAAQ,OACRC,aAAc,OACdgM,KAAM,UACNC,gBAAiB,UACjBvM,MAAO,UACPsL,UAAW,SACXH,UAAW,aACXqB,aAAc,oCACdC,UAAW,oBAEX,UAAW,CACTjM,QAAS,OACTkM,YAAa,6BCaJC,GAvBc,WAC3B,IAAM9G,EAAQgG,YAAYe,EAAUhE,UAC9BiE,EAAahB,YAAYe,EAAUnE,aACnCzD,EAAW8H,cACXlH,EAAchE,uBAAY,SAACiE,GAC/Bb,EAAS+H,EAAQnH,YAAYC,MAC5B,CAACb,IAEJ,OACE,kBAAInE,IAAKC,IACN+L,EACC,YAAC,OAAD,CAAkBG,cAAe,CAAEnH,SAASrE,SAAU,gBAAGqE,EAAH,EAAGA,MAAH,OAAeD,EAAYC,KAC/E,YAAC,QAAD,CACE5E,KAAK,QACLgM,YAAY,kBACZlJ,OAAQ,gBAAGP,EAAH,EAAGA,OAAH,OAAgBoC,EAAYpC,EAAOD,WAG7CsC,I,SCzBK,YAACpG,GAAD,MAA8B,CAC3CsB,SAAU,WACVwL,gBAAiB,gBCoBJW,GAlBM,WACnB,IAAML,EAAahB,YAAYe,EAAUnE,aACnCzD,EAAW8H,cACXK,EAAiBvL,uBACrB,kBAAMoD,EAAS+H,EAAQtH,aAAaoH,MACnC,CAAC7H,EAAU6H,IAEd,OACE,YAACpM,GAAA,EAAD,CAAQI,IAAKC,GAAOsM,QAASD,GAC1BN,EACC,YAAC,KAAD,CAAShH,MAAM,wBAEf,YAAC,KAAD,CAAOA,MAAM,wBChBN,YAACpG,GAAD,oBACboL,KAAM,EACNwC,SAAU5N,EAAMqK,WAAWR,YAAYI,GACvC3I,SAAU,WAEV,YAAa,CACXA,SAAU,QACVuM,IAAK,EACLC,KAAM,EACN7N,MAAO,OACPiK,OAAQlK,EAAMkK,OAAOC,OACrBU,OAAQ7K,EAAM6K,OAAOV,OACrBgB,QAAS,OACT4C,cAAe,SACfpC,eAAgB,SAChBqC,WAAY,SACZlB,gBAAiB9M,EAAMK,QAAQC,MAC/BC,MAAOP,EAAMK,QAAQG,YAErB,kBAAmB,CACjBc,SAAU,WACVuM,IAAK,EACLI,MAAO,EACP/D,OAAQ,OACRiB,QAAS,OACT6C,WAAY,SACZE,YAAalO,EAAME,QAAQC,OAC3BgO,aAAcnO,EAAME,QAAQC,SAIhC,gBAAiB,CACf+J,OAAQlK,EAAMkK,OAAOE,OACrB9I,SAAU,QACV8M,OAAQ,EACRN,KAAM,EACN7N,MAAO,OACP4K,OAAQ7K,EAAM6K,OAAOE,WACrB3K,WAAY,QAGd,UAAW,CACT8K,UAAW,OACX5J,SAAU,WACVuJ,OAAQ7K,EAAM6K,OAAOC,KAErBuD,WAAYrO,EAAMkK,OAAOC,OACzBmE,cAAetO,EAAMkK,OAAOE,OAAS,KAItCpK,EAAMqK,WAAWN,EAAI,CACpBoB,QAAS,OACTjB,OAAQ,OAER,gBAAiB,CACfqE,UAAWvO,EAAMkK,OAAOC,OACxB7I,SAAU,WACV4I,OAAQ,OACR0D,SAAU,KAGZ,UAAW,CACTxC,KAAM,EACNlB,OAAQ,WC1CCsE,GAhBwB,SAAC,GAAkB,IAAhBvN,EAAe,EAAfA,SACxC,OACE,mBAAKG,IAAKC,IACR,mBAAKM,UAAU,UACb,YAAC,GAAD,MACA,mBAAKA,UAAU,gBACb,YAAC,GAAD,QAGJ,mBAAKA,UAAU,QACZV,KChBM,YAACjB,GAAD,MAA8B,CAC3CsL,OAAQ,OACRsC,SAAU5N,EAAMqK,WAAWR,YAAYI,GACvC/J,QAASF,EAAME,QAAQC,OACvBF,MAAO,SCWMwO,GAR8B,SAAC,GAAkB,IAAhBxN,EAAe,EAAfA,SAC9C,OACE,mBAAKG,IAAKC,IACPJ,I,0BCVQ,YAACjB,GAAD,MAA8B,CAC3CsB,SAAU,aCuBGoN,GAjBsC,SAAC,GAK/C,IAJLzN,EAII,EAJJA,SAII,IAHJY,eAGI,MAHM,kBAGN,EAFJ8L,EAEI,EAFJA,QACGzM,EACC,iDACEyN,EAAgBxM,uBAAY,WAChCqF,OAAOoH,QAAQ/M,IAAY8L,MAC1B,CAAC9L,EAAS8L,IAEb,OACE,YAAC3M,GAAA,EAAD,cAAQI,IAAKC,GAAOsM,QAASgB,GAAmBzN,GAC7CD,I,QCJQ4N,GAbqB,WAAO,IAEnCC,GAAWC,EADChM,eAAVgM,OACe,QAEvB,OACE,8BACGD,IAAa9J,EAASgK,QACrB,YAAC,cAAD,CAAaxN,KAAK,SAAS4B,SAAO,MCT3B,YAACpD,GAAD,MAA8B,CAC3CsB,SAAU,WAEV,WAAY,CACVA,SAAU,WACVwL,gBAAiB,UACjBlM,OAAO,aAAD,OAAeZ,EAAMK,QAAQiK,SACnCzJ,aAAc,EACdN,MAAOP,EAAMK,QAAQiK,QACrBpK,QAASF,EAAME,QAAQC,OACvB+N,YAAoC,EAAvBlO,EAAME,QAAQC,OAC3BgO,aAAqC,EAAvBnO,EAAME,QAAQC,OAC5B+K,UAAkC,EAAvBlL,EAAME,QAAQC,OACzBM,WAAY,OACZwO,aAAcjP,EAAME,QAAQC,OAC5BgL,QAAS,OACT+D,oBAAqB,UACrBlB,WAAY,SAEZ,UAAW,CACTpN,OAAQ,OACRL,MAAO,UACPsM,KAAM,UACNlM,SAAU,UACVF,WAAY,UACZiL,UAAW,aACX3K,QAAS,OACTb,QAAS,EACT6M,aAAc,4BACdoC,UAAW,sBAIf,aAAc,CACZhE,QAAS,OACT+D,oBAAqB,UACrBE,cAAepP,EAAME,QAAQC,OAC7BoO,UAAWvO,EAAME,QAAQC,UAIhBkP,GAAiB,SAACrP,GAAD,MAA8B,CAC1D8M,gBAAiB9M,EAAMK,QAAQsK,OAC/BpK,MAAOP,EAAMK,QAAQuK,eCiBR0E,GA1C4B,SAAC,GAIrC,IAHL/B,EAGI,EAHJA,cACAgC,EAEI,EAFJA,SACAxN,EACI,EADJA,SAEA,OACE,mBAAKX,IAAKC,IAER,YAAC,OAAD,CACEkM,cAAeA,EACfxL,SAAUA,GAEV,mBAAKJ,UAAU,cAEb,mBAAKA,UAAU,SACb,YAAC,QAAD,CAAOH,KAAK,QAAQgM,YAAY,gBAElC,mBAAK7L,UAAU,WACb,YAAC,SAAD,CACEH,KAAK,OACLS,QAAS,CACP,CAAE6B,MAAOkB,EAASoC,MAAO3F,MAAO,cAChC,CAAEqC,MAAOkB,EAASwK,SAAU/N,MAAO,iBACnC,CAAEqC,MAAOkB,EAASgK,OAAQvN,MAAO,wBAGrC,YAAC,GAAD,QAGJ,mBAAKE,UAAU,WACb,YAACX,GAAA,EAAD,CAAQ2M,QAAS4B,EAAUnO,IAAKiO,IAAhC,UAGA,YAAC,eAAD,kB,S1BlDExI,K,YAAAA,E,gBAAAA,E,aAAAA,M,KAML,I2BAY4I,G,oBCPJ,YAACzP,GAAD,MAA8B,CAC3CsB,SAAU,WACV6J,QAAS,OACTQ,eAAgB,WAEhB,UAAW,CACThL,SAAU,GACV+O,WAAY1P,EAAME,QAAQC,QAG5B,WAAY,CACVI,MAAO,oBACP4K,QAAS,OACT6C,WAAY,SAEZ,aAAc,CACZzN,MAAOP,EAAMK,QAAQkK,UAIzB,yBAA0B,CACxBY,QAAS,OACTQ,eAAgB,cCiCLgE,GApDuB,SAAC,GAIhC,IAHLxO,EAGI,EAHJA,KACAkG,EAEI,EAFJA,UAEI,IADJtD,cACI,MADK,EACL,EAEJ,OACE,mBAAK3C,IAAKC,IACPF,IAAS6D,EAASoC,OACjB,mBAAKzF,UAAWiO,KAAG,aAAc,CAAEC,SAAUxI,EAAY,KACvD,YAAC,KAAD,OAGHlG,IAAS6D,EAASwK,UACjB,mBAAK7N,UAAWiO,KAAG,WAAY,CAAEC,SAAUxI,EAAY,KACpDA,EAAY,EAAIyI,MAAMC,KAAK,CAAEvN,OAAQ6E,IAAaxC,KAAI,SAACiE,EAAGhE,GAAJ,OACrD,mBAAKC,IAAKD,EAAKnD,UAAU,uBACvB,YAAC,KAAD,UAIF,8BACE,mBAAKA,UAAU,6BAA6B0F,GAC5C,mBAAK1F,UAAU,uBACb,YAAC,KAAD,SAMTR,IAAS6D,EAASgK,QACjB,mBAAKrN,UAAWiO,KAAG,SAAU,CAAEC,SAAUxI,GAAatD,KACnDA,EAAS,EAAI+L,MAAMC,KAAK,CAAEvN,OAAQuB,IAAUc,KAAI,SAACiE,EAAGhE,GAAJ,OAC/C,mBAAKC,IAAKD,EAAKnD,UAAWiO,KAAG,aAAc,CAAEC,SAAU/K,GAAQf,EAASsD,KACtE,YAAC,KAAD,UAGF,8BACE,mBAAK1F,UAAWiO,KAAG,mBAAoB,CAAEC,SAAUxI,GAAatD,KAC7DiM,KAAKC,IAAI5I,EAAWtD,GADvB,MACmCA,GAEnC,mBAAKpC,UAAWiO,KAAG,mBAAoB,CAAEC,SAAUxI,GAAatD,KAC9D,YAAC,KAAD,WC7CD,YAAC/D,GAAD,MAA8B,CAE3C,WAAY,CACVsB,SAAU,WACVwL,gBAAiB,UACjBlM,OAAO,aAAD,OAAeZ,EAAMK,QAAQiK,SACnCzJ,aAAc,EACdN,MAAOP,EAAMK,QAAQiK,QACrBpK,QAASF,EAAME,QAAQC,OACvB+N,YAAoC,EAAvBlO,EAAME,QAAQC,OAC3BgO,aAAqC,EAAvBnO,EAAME,QAAQC,OAC5B+K,UAAkC,EAAvBlL,EAAME,QAAQC,OACzBM,WAAY,OACZwO,aAAcjP,EAAME,QAAQC,OAC5BgL,QAAS,OACT+D,oBAAqB,UACrBlB,WAAY,UAGd,gBAAiB,CACflN,OAAQ,WAGV,qBAAsB,CACpBqK,QAAS,OACTQ,eAAgB,WAEhB,WAAY,CACVzL,QAAS,EACTD,MAAO,GACPiK,OAAQ,GACRgE,YAAalO,EAAME,QAAQC,OAC3BgO,aAAcnO,EAAME,QAAQC,OAC5BuP,WAAY1P,EAAME,QAAQC,OAC1BgL,QAAS,OACT6C,WAAY,SACZrC,eAAgB,aAKTuE,GAAY,SAAClQ,GAAD,MAA8B,CACrD8M,gBAAiB9M,EAAMK,QAAQsK,OAC/BpK,MAAOP,EAAMK,QAAQuK,eAGVuF,GAAW,SAACnQ,GAAD,MAA8B,CACpD8M,gBAAiB9M,EAAMK,QAAQoK,QAC/BlK,MAAOP,EAAMK,QAAQqK,gBCyBR0F,GA1DoB,SAAC,GAE7B,IAAD,E/BViB,SAACtL,GACtB,IACMqD,EADQiE,YAAYe,EAAU/D,UACjBtE,GACb4D,EAAU0D,YAAYe,EAAUjE,YAChCnC,EAAWqF,YAAYe,EAAUnE,aAEjCmC,EAAUkF,mBAAQ,WACtB,OAAI3H,IAAY5D,EAAY+B,EAAYyJ,KACpCvJ,EAAiBF,EAAY0J,OAC1B1J,EAAY2J,OAClB,CAAC9H,EAAS3B,EAAUjC,IAEjBS,EAAW8H,cACXoD,EAAOtO,uBAAY,gBACPgC,IAAZuE,GACFnD,EAAS+H,EAAQjH,WAAWvB,MAE7B,CAACS,EAAUmD,EAAS5D,IACjB4L,EAAavO,uBAAY,WAC7BoD,EAAS+H,EAAQjH,gBAChB,CAACd,IAEEoL,EAASxO,uBAAY,SAACuE,GAC1BnB,EAAS+H,EAAQ7G,WAAW3B,EAAK4B,MAChC,CAACnB,EAAUT,IAER0B,EAAarE,uBAAY,kBAAMoD,EAAS+H,EAAQ9G,WAAW1B,MAAO,CAACS,EAAUT,IAC7E8B,EAAYzE,uBAAY,kBAAMoD,EAAS+H,EAAQ1G,UAAU9B,MAAO,CAACS,EAAUT,IAE3E+K,EAAW1N,uBAAY,WAC3BoD,EAAS+H,EAAQ3G,aAAa7B,MAC7B,CAACS,EAAUT,IAEd,MAAO,CAELsB,MAAO+B,EAAK/B,MACZjF,KAAMgH,EAAKhH,KACXkG,UAAWc,EAAKd,UAChBtD,OAAQoE,EAAKpE,OAEboH,UACAsF,OACAC,aACAC,SACAnK,aACAI,YACAiJ,Y+BvBEe,CAbA,EADJC,OAGEzK,EAFE,EAEFA,MACAiB,EAHE,EAGFA,UACAlG,EAJE,EAIFA,KACA4C,EALE,EAKFA,OACAoH,EANE,EAMFA,QACA0E,EAPE,EAOFA,SACAY,EARE,EAQFA,KACAC,EATE,EASFA,WACAC,EAVE,EAUFA,OACAnK,EAXE,EAWFA,WACAI,EAZE,EAYFA,UAIF,OACE,mBAAKjF,UAAU,OAAOP,IAAKC,IACxB8J,IAAYtE,EAAY2J,MACvB,mBAAK7O,UAAU,aAAagM,QAASkC,GACnC,mBAAKlO,UAAU,SAASyE,GACxB,YAAC,GAAD,CACEA,MAAOA,EACPjF,KAAMA,EACNkG,UAAWA,EACXtD,OAAQA,KAIboH,IAAYtE,EAAY0J,QACvB,mBAAK5O,UAAU,gBACb,mBAAKA,UAAU,SAASyE,GACxB,mBAAKzE,UAAU,WACb,YAAC,GAAD,CAAegM,QAASnH,EAAYpF,IAAK8O,GAAWrO,QAAO,kBAAauE,EAAb,YACzD,YAAC,KAAD,OAEF,YAAC,GAAD,CAAeuH,QAAS/G,EAAWxF,IAAK+O,GAAUtO,QAAO,iBAAYuE,EAAZ,YACvD,YAAC,KAAD,OAEF,YAACpF,GAAA,EAAD,CAAQ2M,QAAS8C,GACf,YAAC,KAAD,SAKPtF,IAAYtE,EAAYyJ,MACvB,YAAC,GAAD,CACEvO,SAAU4O,EACVpB,SAAUmB,EACVnD,cAAe,CAAEnH,QAAOjF,OAAM4C,c,SClEzB,YAAC/D,GAAD,MAA8B,CAC3CsB,SAAU,WACViN,UAAWvO,EAAME,QAAQC,SAGd2Q,GAAc,SAAC9Q,GAAD,MAA8B,CACvD8M,gBAAiB9M,EAAMK,QAAQkK,QAC/BhK,MAAOP,EAAMK,QAAQmK,gBCgCRuG,GA9BW,WACxB,IACMpM,OAAuBR,IADbiI,YAAYe,EAAUjE,YAGhC3D,EAAW8H,cAJa,EAKA5J,oBAAS,GALT,oBAKvBuN,EALuB,KAKbC,EALa,KAMxBR,EAAOtO,uBAAY,kBAAM8O,GAAU,KAAO,CAACA,IAC3CC,EAAS/O,uBAAY,kBAAM8O,GAAU,KAAQ,CAACA,IAC9CE,EAAahP,uBAAY,SAACC,GAC9BmD,EAAS+H,EAAQhH,QAAQlE,IACzB6O,GAAU,KACT,CAAC1L,EAAU0L,IAEd,OACE,mBAAK7P,IAAKC,IACN2P,IAAarM,EACb,YAAC,GAAD,CACE4I,cAAe,CAAEpM,KAAM6D,EAASoC,OAChCrF,SAAUoP,EACV5B,SAAU2B,IAGZ,YAAClQ,GAAA,EAAD,CAAQI,IAAK0P,GAAanD,QAAS8C,EAAM9L,SAAUA,GAAnD,OCzBFtD,GAAQ,SAACrB,GAAD,MAA8B,CAC1CqO,WAAYrO,EAAME,QAAQC,SAwBbiR,GArBE,WACf,IAAMhE,EAAahB,YAAYe,EAAUnE,aACnC7B,EAAQiF,YAAYe,EAAU/D,UAEpC,OACE,YAAC,GAAD,KACE,mBAAKhI,IAAKC,GAAOM,UAAU,aACP,IAAjBwF,EAAM3E,QACL,8CAID2E,EAAMtC,KAAI,SAACsD,EAAM0I,GAAP,OACT,YAAC,GAAD,cAAM9L,IAAK8L,GAAW1I,EAAtB,CAA4B0I,MAAOA,QAEpCzD,GAAc,YAAC,GAAD,SCERiE,GAjBH,WACV,OACE,8BACE,YAAC,EAAD,MACA,mBAAK1P,UAAU,OACb,YAAC,GAAD,KACE,YAAC,EAAD,CACEqK,OAAM,ezCnBO,YyCoBEoF,URbrBE,GSIUC,sBACZC,EACAC,8BACE9L,EACA+L,0BACE7L,EACA8L,IACApI,KTTWkG,GAUT4B,GATRO,IAASC,OACP,YAAC,IAAD,CAAUP,MAAOA,IACf,YAAC,IAAD,CAAetR,MAAOA,GACpB,YAACyP,GAAD,QAGJqC,SAASC,eAAe,W","file":"static/js/main.473c4ade.chunk.js","sourcesContent":["export { default as Form } from './Form/Form';\nexport * from './Form/types';\nexport { default as Input } from './Input/Input';\nexport { default as NumberInput } from './NumberInput/NumberInput';\nexport { default as Select } from './Select/Select';\nexport { default as SubmitButton } from './SubmitButton/SubmitButton';","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  width: '100%',\n  padding: theme.padding.global,\n  background: theme.palette.brand,\n  color: theme.palette.brandOffset,\n  fontWeight: 'bold',\n  lineHeight: 2,\n  fontSize: 16,\n  border: 0,\n  borderRadius: 4,\n  cursor: 'pointer',\n  outline: 'none',\n});\n","import React from 'react';\nimport style from './Button.style';\n\n// Basic styled button\nconst Button: React.FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({\n  children,\n  ...rest\n}) => {\n  return (\n    <button type=\"button\" {...rest} css={style}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button;","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n});\n","import React from 'react';\nimport { IFieldWrapperProps as IFieldWrapperBaseProps } from '../FieldProps.interface';\nimport style from './FieldWrapper.style';\n\nexport interface IFieldWrapperProps extends IFieldWrapperBaseProps {\n  children: React.ReactNode;\n}\n\nconst FieldWrapper: React.FC<IFieldWrapperProps> = ({\n  children,\n  name,\n  label,\n  // required,\n  error,\n}) => {\n  return (\n    <div css={style} className=\"field-wrapper\">\n      <div>\n        {label && (\n          <label htmlFor={name}>{label}</label>\n        )}\n      </div>\n      <div>\n        {children}\n      </div>\n      <div>\n        {error && (\n          <div>{error.message}</div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FieldWrapper;","import React, { useCallback } from 'react';\nimport {\n  useForm,\n  FormContext,\n  UseFormOptions,\n  FieldErrors,\n} from 'react-hook-form';\nimport { SubmitFunc } from './types';\n\nexport interface FormProps<T> extends UseFormOptions<T> {\n  /**\n   * Form children\n   */\n  children?: React.ReactNode;\n  /**\n   * Submit handler\n   * passed values and files object\n   */\n  onSubmit?: SubmitFunc<T>,\n  /**\n   * Validate function\n   * Accepts async validation functions as well\n   */\n  validate?: (values: T) => FieldErrors<T> | Promise<FieldErrors<T>>\n}\n\n/**\n * Form wrapper component.\n * Provides context for child components\n * TODO: Unsure if we actually want to go this route...\n */\nconst Form = <T,>({\n  children,\n  onSubmit = () => {},\n  validate,\n  ...options\n}: FormProps<T>) => {\n  const validationResolver = useCallback((values: T) => {\n    const errors = validate ? validate(values) : {};\n    const hasError = Object.keys(errors).length > 0;\n\n    return {\n      errors,\n      values: hasError ? {} : values,\n    }\n  }, [validate]);\n  const methods = useForm<T>({ validationResolver, ...options });\n  const submitFunc = useCallback(async (values: T) => {\n    await onSubmit(values);\n  }, [onSubmit]);\n\n  return (\n    <FormContext {...methods}>\n      <form onSubmit={methods.handleSubmit(submitFunc)}>\n        {children}\n      </form>\n    </FormContext>\n  )\n}\n\nexport default Form;\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport FieldWrapper from '../FieldWrapper/FieldWrapper';\nimport { IFieldWrapperProps } from '../FieldProps.interface';\n\nexport interface IInputProps extends Omit<React.HTMLProps<HTMLInputElement>, 'name'>, IFieldWrapperProps {\n  // TODO: Other Props?\n}\n\nconst Input: React.FC<IInputProps> = ({ name, ...rest }) => {\n  const { register, errors } = useFormContext();\n  const error = errors[name!];\n  // Do other stuff...\n\n  return (\n    <FieldWrapper name={name} label={rest.label} required={rest.required} error={error}>\n      <input {...rest} name={name} id={name} ref={register} />\n    </FieldWrapper>\n  );\n}\n\nexport default Input;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport FieldWrapper from '../FieldWrapper/FieldWrapper';\nimport { IFieldWrapperProps } from '../FieldProps.interface';\n\nexport interface IInputProps extends Omit<React.HTMLProps<HTMLInputElement>, 'name'>, IFieldWrapperProps {\n  // TODO: Other Props?\n  integer?: boolean;\n}\n\nconst Input: React.FC<IInputProps> = ({ name, integer, ...rest }) => {\n  const {\n    errors,\n    setValue,\n    getValues,\n    register,\n    unregister,\n  } = useFormContext();\n  const error = errors[name!];\n  // Do other stuff...\n  const values = getValues();\n  const formValue = values[name] as number | undefined;\n  const [strValue, setStrValue] = useState(formValue ?? '');\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n\n    setStrValue(value);\n    if (value) {\n      const numberValue = integer ? parseInt(value) : parseFloat(value);\n      setValue(name, numberValue);\n    } else {\n      setValue(name, undefined);\n    }\n  }, [name, setValue, integer]);\n\n  useEffect(() => {\n    register({ name, type: 'custom' });\n    return () => {\n      unregister(name);\n    };\n  }, [name, register, unregister]);\n\n  return (\n    <FieldWrapper name={name} label={rest.label} required={rest.required} error={error}>\n      <input\n        {...rest}\n        name={name}\n        id={name}\n        type=\"number\"\n        onChange={handleChange}\n        onBlur={handleChange}\n        value={strValue}\n      />\n    </FieldWrapper>\n  );\n}\n\nexport default Input;\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport Button from '../../Button/Button';\n\n/**\n * TODO: Custom loading component?\n */\nconst SubmitButton: React.FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({\n  children,\n  ...rest\n}) => {\n  const {\n    formState: {\n      dirty,\n      isSubmitting,\n    }\n  } = useFormContext();\n\n  return (\n    <Button {...rest} type=\"submit\" disabled={!dirty}>\n      {isSubmitting ? '...' : children}\n    </Button>\n  );\n}\n\nexport default SubmitButton;","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n});\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport FieldWrapper from '../FieldWrapper/FieldWrapper';\nimport { IFieldWrapperProps } from '../FieldProps.interface';\nimport style from './Select.style';\n\n// TODO: objects and strings\ninterface ISelectOption {\n  value: string;\n  label: string;\n}\n\nexport interface ISelectProps extends Omit<React.HTMLProps<HTMLSelectElement>, 'name'>, IFieldWrapperProps {\n  // TODO: Other Props?\n  options: Array<ISelectOption>\n}\n\n\nconst Select: React.FC<ISelectProps> = ({\n  name,\n  options,\n  ...rest\n}) => {\n  const { register, errors } = useFormContext();\n  const error = errors[name!];\n  // Do other stuff...\n\n  return (\n    <FieldWrapper name={name} label={rest.label} required={rest.required} error={error}>\n      <select css={style} name={name} id={name} ref={register}>\n        {options.map(({ label, value }, idx) => (\n          <option key={value} value={value}>\n            {label}\n          </option>\n        ))}\n      </select>\n    </FieldWrapper>\n  );\n};\n\nexport default Select;\n","export enum TodoType {\n  BASIC = 'BASIC',\n  MULTIPLE = 'MULTIPLE',\n  TARGET = 'TARGET',\n}\n\nexport interface ITodo {\n  title: string;\n  type: TodoType;\n  completed: number;\n  target?: number;\n  // TODO: Additional properties based on type\n  // Custom repeat (other than daily)?\n  // track history?\n}\n\nexport interface ITodosState {\n  // Are we managing our todos?\n  managing: boolean;\n  // Are we editing a todo?\n  editing?: number,\n  // Todos list title\n  title: string;\n  // TODO: store as UNIX Epoch time for space\n  todaysDate: string;\n  todos: ITodo[];\n}\n","import { RoutesMap } from 'redux-first-router';\nimport {\n  HOME_PAGE,\n} from './constants';\n\nexport const routesMap: RoutesMap = {\n  // General\n  [HOME_PAGE]: {\n    path: '/',\n  },\n};\n","// General Routes\nexport const HOME_PAGE = 'HOME_PAGE';\n","/**\n * TODO: Move these actions to state/location/actions.ts?\n */\nimport { createAction } from 'typesafe-actions';\nimport {\n  HOME_PAGE,\n} from './constants';\n\n// General\nexport const homePage = createAction(HOME_PAGE);\n","import { connectRoutes } from 'redux-first-router';\nimport restoreScroll from 'redux-first-router-restore-scroll';\nimport { routesMap } from './routesMap';\nimport { onBeforeChange } from './onBeforeChange';\nimport * as actions from './actions';\n\n// RFR Setup\nconst {\n  enhancer: routeEnhancer,\n  middleware: routerMiddleware,\n  reducer,\n} = connectRoutes(routesMap, {\n  basename: process.env.NODE_ENV === 'production' ? '/daily-todos' : '',\n  onBeforeChange,\n  restoreScroll: restoreScroll(),\n});\n\n// Route Constants\nexport * from './constants';\n\nexport {\n  routesMap,\n  onBeforeChange,\n  routeEnhancer,\n  routerMiddleware,\n\n  actions,\n};\n\nexport default reducer;","import { StateGetter, Bag } from 'redux-first-router';\nimport { Dispatch } from 'redux';\n\n\nexport const onBeforeChange = (dispatch: Dispatch, getState: StateGetter, bag: Bag): void => {\n  const state = getState();\n  // const routeType = bag.action.type;\n\n  // Do something\n  if (state) {\n\n  }\n\n  // Custom Route handling\n};","import { createAction } from 'typesafe-actions';\nimport { ITodo } from './types';\n\n// Actions\nexport const setManaging = createAction('@todos/SET_MANAGING', ac => (flag: boolean) => ac(flag));\nexport const updateTitle = createAction('@todos/UPDATE_TITLE', ac => (title: string) => ac(title));\nexport const setEditing = createAction('@todos/SET_EDITING', ac => (idx?: number) => ac(idx));\nexport const addTodo = createAction('@todos/ADD', ac => (params: Omit<ITodo, 'completed'>) => ac(params));\nexport const deleteTodo = createAction('@todos/DELETE', ac => (idx: number) => ac(idx));\nexport const updateTodo = createAction('@todos/UPDATE',\n  ac => (idx: number, data: Omit<ITodo, 'completed'>) => ac({ idx, data })\n);\nexport const completeTodo = createAction('@todos/COMPLETE', ac => (idx: number) => ac(idx));\nexport const resetTodo = createAction('@todos/RESET', ac => (idx: number) => ac(idx));\n","import { RootAction } from 'state-types';\nimport { createReducer } from 'typesafe-actions';\nimport {\n  setManaging,\n  updateTitle,\n  setEditing,\n  addTodo,\n  deleteTodo,\n  updateTodo,\n  completeTodo,\n  resetTodo,\n} from './actions';\nimport { ITodosState, TodoType } from './types';\n\nexport const defaultInitialState: ITodosState = {\n  managing: false,\n  title: 'Daily Todo List',\n  todaysDate: new Date().toISOString(),\n  todos: [{\n    title: 'Manage my daily todos',\n    type: TodoType.BASIC,\n    completed: 0,\n  }],\n}\n\n// Get reducer initial state conditionally from localStorage\nexport const getInitialState = (): ITodosState => {\n  const todosJSON = window.localStorage.getItem('todos');\n\n  if (todosJSON) {\n    try {\n      const data: ITodosState = JSON.parse(todosJSON);\n\n      // Cautiously map all values\n      const today = new Date();\n      const storedDate = new Date(data.todaysDate);\n      const clearTodos = storedDate.getFullYear() !== today.getFullYear() ||\n        storedDate.getMonth() !== today.getMonth() ||\n        storedDate.getDate() !== today.getDate();\n\n      // TODO: Omit invalid todos?\n      const todos = data.todos.map(todo => ({\n        ...todo,\n        completed: clearTodos ? 0 : todo.completed,\n      }));\n\n      return {\n        managing: todos.length === 0,\n        title: data.title,\n        todaysDate: new Date().toISOString(),\n        todos,\n      }\n    } catch(err) {\n      return defaultInitialState;\n    }\n  }\n\n  return defaultInitialState;\n}\n\n// Reducer\nconst reducer = createReducer<ITodosState, RootAction>(getInitialState())\n  .handleAction(setManaging, (state, action) => ({\n    ...state,\n    managing: action.payload,\n    editing: !action.payload ? undefined : state.editing,\n  }))\n  .handleAction(updateTitle, (state, action) => ({\n    ...state,\n    title: action.payload,\n  }))\n  .handleAction(setEditing, (state, action) => ({\n    ...state,\n    // Only set if we're already managing\n    editing: state.managing ? action.payload : undefined,\n  }))\n  .handleAction(addTodo, (state, action) => ({\n    ...state,\n    todos: [\n      ...state.todos,\n      {\n        ...action.payload,\n        completed: 0,\n      }\n    ]\n  }))\n  .handleAction(updateTodo, (state, action) => {\n    const todoIdx = action.payload.idx;\n    const todo = state.todos[todoIdx];\n\n    if (todo) {\n      return {\n        ...state,\n        editing: undefined,\n        todos: [\n          ...state.todos.slice(0, todoIdx),\n          {\n            ...todo,\n            ...action.payload.data,\n          },\n          ...state.todos.slice(todoIdx + 1),\n        ]\n      }\n    }\n\n    return state;\n  })\n  .handleAction(deleteTodo, (state, action) => ({\n    ...state,\n    todos: state.todos.filter((_, idx) => idx !== action.payload),\n  }))\n  .handleAction(completeTodo, (state, action) => {\n    const todoIdx = action.payload;\n    const todo = state.todos[todoIdx];\n\n    if (todo) {\n      return {\n        ...state,\n        todos: [\n          ...state.todos.slice(0, todoIdx),\n          {\n            ...todo,\n            completed: todo.completed + 1,\n          },\n          ...state.todos.slice(todoIdx + 1),\n        ]\n      };\n    }\n    return state;\n  })\n  .handleAction(resetTodo, (state, action) => {\n    const todoIdx = action.payload;\n    const todo = state.todos[todoIdx];\n\n    if (todo) {\n      return {\n        ...state,\n        todos: [\n          ...state.todos.slice(0, todoIdx),\n          {\n            ...todo,\n            completed: 0,\n          },\n          ...state.todos.slice(todoIdx + 1),\n        ]\n      };\n    }\n    return state;\n  });\n\nexport default reducer;\n","import { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions, selectors, ITodo } from 'state/todos';\n\nexport enum TodoDisplay {\n  EDIT = 'EDIT',\n  MANAGE = 'MANAGE',\n  VIEW = 'VIEW',\n}\n\nexport const useTodo = (idx: number) => {\n  const todos = useSelector(selectors.getTodos);\n  const todo = todos[idx];\n  const editing = useSelector(selectors.getEditing);\n  const managing = useSelector(selectors.getManaging);\n\n  const display = useMemo(() => {\n    if (editing === idx) return TodoDisplay.EDIT;\n    if (managing) return TodoDisplay.MANAGE;\n    return TodoDisplay.VIEW;\n  }, [editing, managing, idx]);\n\n  const dispatch = useDispatch();\n  const edit = useCallback(() => {\n    if (editing === undefined) {\n      dispatch(actions.setEditing(idx));\n    }\n  }, [dispatch, editing, idx]);\n  const cancelEdit = useCallback(() => {\n    dispatch(actions.setEditing());\n  }, [dispatch]);\n\n  const update = useCallback((data: Omit<ITodo, 'completed'>) => {\n    dispatch(actions.updateTodo(idx, data));\n  }, [dispatch, idx]);\n\n  const deleteTodo = useCallback(() => dispatch(actions.deleteTodo(idx)), [dispatch, idx]);\n  const resetTodo = useCallback(() => dispatch(actions.resetTodo(idx)), [dispatch, idx]);\n\n  const complete = useCallback(() => {\n    dispatch(actions.completeTodo(idx));\n  }, [dispatch, idx]);\n\n  return {\n    // Values\n    title: todo.title,\n    type: todo.type,\n    completed: todo.completed,\n    target: todo.target,\n    // Other\n    display,\n    edit,\n    cancelEdit,\n    update,\n    deleteTodo,\n    resetTodo,\n    complete,\n  }\n};\n","import { RootState } from 'state-types';\nimport { createSelector } from 'reselect';\n\nexport const getTodoState = (state: RootState) => state.todos;\nexport const getManaging = createSelector(getTodoState, state => state.managing);\nexport const getEditing = createSelector(getTodoState, state => state.editing);\nexport const getTitle = createSelector(getTodoState, state => state.title);\nexport const getTodos = createSelector(getTodoState, state => state.todos);","import reducer from './reducer';\nimport * as actions from './actions';\nimport * as selectors from './selectors';\nimport * as thunks from './thunks';\n\nexport * from './types';\nexport {\n  actions,\n  selectors,\n  thunks,\n};\n\nexport default reducer;","import { combineReducers } from 'redux';\n\nimport location from 'routes';\nimport todos from './todos';\n\nexport default combineReducers({\n  location,\n  todos,\n});\n","import { Middleware, AnyAction } from 'redux';\nimport { RootState } from 'state-types';\n\nexport const persistTodosMiddleware: Middleware = api => next => (action: AnyAction) => {\n  const { getState } = api;\n  next(action);\n\n  // Persist todos to localStorage\n  if (typeof action.type === 'string' && action.type.includes('@todos')) {\n    const state: RootState = getState();\n    window.localStorage.setItem('todos', JSON.stringify(state.todos));\n  }\n};\n","/**\n * Media queries for responsive design.\n * Breakpoints are setup for mobile first design.\n */\nconst breakpoints = {\n  s: 576,\n  m: 768,\n  l: 992,\n  xl: 1200,\n};\n\nexport const mediaQuery = {\n  breakpoints,\n  s: `@media(min-width: ${breakpoints.s}px)`,\n  m: `@media(min-width: ${breakpoints.m}px)`,\n  l: `@media(min-width: ${breakpoints.l}px)`,\n  xl: `@media(min-width: ${breakpoints.xl}px)`,\n};\n","// This is where we define our applications theme to be provided to all components...\nimport { height } from './height'\nimport { mediaQuery } from './mediaQuery';\nimport { padding } from './padding';\nimport { palette } from './palette';\nimport { width } from './width';\nimport { zIndex } from './zIndex';\n\nconst theme = {\n  height,\n  mediaQuery,\n  padding,\n  palette,\n  width,\n  zIndex,\n}\n\nexport type Theme = typeof theme;\n\nexport default theme;\n","export interface IHeight {\n  header: number;\n  footer: number;\n};\n\nexport const height: IHeight = {\n  header: 60,\n  footer: 60,\n};\n","export const padding = {\n  global: 8,\n};\n","export const palette = {\n  primary: 'rgba(0,0,0,0.7)',\n  brand: 'DodgerBlue',\n  brandOffset: '#ffffff',\n  success: '#4caf50',\n  successOffset: '#ffffff',\n  warning: '#ff9800',\n  warningOffset: '#ffffff',\n  danger: '#f44336',\n  dangerOffset: '#ffffff',\n}","export const width = {\n  // Add widths here somewhere\n};\n","export const zIndex = {\n  main: 1,\n  header: 101,\n  navigation: 100,\n}\n","import React from 'react';\nimport { Global, css, CSSObject } from '@emotion/core';\n\nconst styles: CSSObject = {\n  html: {\n    minHeight: '100%',\n  },\n  'html, body, #root, .app': {\n    // height: '100%',\n    display: 'flex',\n    flex: 1,\n  },\n  body: {\n    margin: 0,\n    fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n    WebkitFontSmoothing: 'antialiased',\n    MozOsxFontSmoothing: 'grayscale',\n  },\n  '*': {\n    boxSizing: 'border-box' as 'border-box',\n  },\n  '.app': {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n\n  // TODO: Global heading styles\n  h1: {\n    margin: 0,\n    fontSize: 28,\n    textAlign: 'center',\n  }\n};\n\nconst GlobalStyle = () => <Global styles={css(styles)} />;\n\nexport default GlobalStyle;\n","import * as React from 'react'\nimport { useSelector } from 'react-redux'\nimport { LocationState } from 'redux-first-router'\nimport { RootState } from 'state-types';\n\nexport interface Props {\n  routes?: {\n    [routeAction: string]: React.ComponentType<{ location: LocationState, in: boolean }>\n  },\n  defaultComponent?: React.ComponentType<{ location: LocationState, in: boolean }>\n  transition?: string\n}\n\nconst RouteSwitch = ({\n  routes = {},\n  defaultComponent: DefaultComponent,\n  transition,\n}: Props) => {\n  const location = useSelector((state: RootState) => state.location)\n\n  // Render as transitions\n  if (transition) {\n    let routeMatched = false\n    const routeComponents = Object.keys(routes).map(routeType => {\n      const isCurrentRoute = location.type === routeType\n      routeMatched = routeMatched || isCurrentRoute\n\n      const RouteTransitionComponent = routes[routeType]\n\n      return <RouteTransitionComponent key={`${transition}:${routeType}`} location={location} in={isCurrentRoute} />\n    })\n\n    if (DefaultComponent) {\n      routeComponents.push(\n        <DefaultComponent key={`${transition}:default`} location={location} in={!routeMatched} />\n      )\n    }\n\n    return <>{routeComponents}</>\n  }\n\n  // Render\n  const RouteComponent = routes[location.type] || DefaultComponent\n\n  if (RouteComponent) {\n    return <RouteComponent location={location} in />\n  }\n\n  return null\n}\n\nexport default RouteSwitch\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n\n  '& input': {\n    position: 'relative',\n    border: 'none',\n    borderRadius: 'none',\n    font: 'inherit',\n    backgroundColor: 'inherit',\n    color: 'inherit',\n    textAlign: 'center',\n    boxSizing: 'border-box',\n    borderBottom: '1px solid rgba(255,255,255, 0.25)',\n    transform: 'translate(0, 1px)',\n\n    '&:focus': {\n      outline: 'none',\n      borderColor: 'rgba(255,255,255,0.75)',\n    },\n  }\n});\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions, selectors } from 'state/todos';\nimport { Form, Input } from 'components/form';\nimport style from './TodosTitle.style';\n\ntype FormValues = {\n  title: string;\n};\n\nconst TodosTitle: React.FC = () => {\n  const title = useSelector(selectors.getTitle);\n  const isManaging = useSelector(selectors.getManaging);\n  const dispatch = useDispatch();\n  const updateTitle = useCallback((title) => {\n    dispatch(actions.updateTitle(title));\n  }, [dispatch]);\n\n  return (\n    <h1 css={style}>\n      {isManaging ? (\n        <Form<FormValues> defaultValues={{ title }} onSubmit={({ title }) => updateTitle(title)}>\n          <Input\n            name=\"title\"\n            placeholder=\"TODO List Title\"\n            onBlur={({ target }) => updateTitle(target.value)}\n          />\n        </Form>\n      ) : title}\n    </h1>\n  );\n};\n\nexport default TodosTitle;\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n  backgroundColor: 'transparent',\n});\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions, selectors } from 'state/todos';\nimport { Button } from 'components';\nimport { FaCog, FaTimes } from 'react-icons/fa';\nimport style from './ManageButton.style';\n\nconst ManageButton = () => {\n  const isManaging = useSelector(selectors.getManaging);\n  const dispatch = useDispatch();\n  const toggleManaging = useCallback(\n    () => dispatch(actions.setManaging(!isManaging)\n  ), [dispatch, isManaging]);\n\n  return (\n    <Button css={style} onClick={toggleManaging}>\n      {isManaging ? (\n        <FaTimes title=\"Stop managing todos\" />\n      ) : (\n        <FaCog title=\"Manage your todos\" />\n      )}\n    </Button>\n  );\n};\n\nexport default ManageButton;\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  flex: 1,\n  maxWidth: theme.mediaQuery.breakpoints.xl,\n  position: 'relative',\n\n  '& .header': {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: theme.height.header,\n    zIndex: theme.zIndex.header,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.palette.brand,\n    color: theme.palette.brandOffset,\n\n    '& .settings-btn': {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      height: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      paddingLeft: theme.padding.global,\n      paddingRight: theme.padding.global,\n    },\n  },\n\n  '& .navigation': {\n    height: theme.height.footer,\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    zIndex: theme.zIndex.navigation,\n    background: 'teal',\n  },\n\n  '& .main': {\n    minHeight: '100%',\n    position: 'relative',\n    zIndex: theme.zIndex.main,\n\n    paddingTop: theme.height.header,\n    paddingBottom: theme.height.footer + 10,\n  },\n\n  // We move the nav to the left for large screens\n  [theme.mediaQuery.m]: {\n    display: 'flex',\n    height: 'auto',\n\n    '& .navigation': {\n      marginTop: theme.height.header,\n      position: 'relative',\n      height: 'auto',\n      maxWidth: 200,\n    },\n\n    '& .main': {\n      flex: 1,\n      height: 'auto'\n    }\n\n  }\n});\n","import React from 'react';\nimport TodosTitle from 'components/TodosTitle/TodosTitle';\nimport ManageButton from 'components/ManageButton/ManageButton';\nimport style from './Layout.style';\n\nexport interface ILayoutProps {\n  children?: React.ReactNode;\n}\n\nconst Layout: React.FC<ILayoutProps> = ({ children }) => {\n  return (\n    <div css={style}>\n      <div className=\"header\">\n        <TodosTitle />\n        <div className=\"settings-btn\">\n          <ManageButton />\n        </div>\n      </div>\n      <div className=\"main\">\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Layout;\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  margin: 'auto',\n  maxWidth: theme.mediaQuery.breakpoints.xl,\n  padding: theme.padding.global,\n  width: '100%',\n});\n","import React from 'react';\nimport style from './Container.style';\n\nexport interface IContainerProps {\n  children: React.ReactNode;\n}\n\n/**\n * Basic padded container\n */\nconst Container: React.FC<IContainerProps> = ({ children }) => {\n  return (\n    <div css={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default Container;\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n});\n","import React, { useCallback } from 'react';\nimport Button from '../Button/Button';\nimport style from './DeleteConfirm.style';\n\nexport interface IDeleteConfirmProps {\n  children: React.ReactNode;\n  message?: string;\n  onClick: () => void;\n}\n\nconst DeleteConfirm: React.FC<IDeleteConfirmProps> = ({\n  children,\n  message = 'Confirm delete?',\n  onClick,\n  ...rest\n}) => {\n  const confirmDelete = useCallback(() => {\n    window.confirm(message) && onClick();\n  }, [message, onClick]);\n\n  return (\n    <Button css={style} onClick={confirmDelete} {...rest}>\n      {children}\n    </Button>\n  );\n};\n\nexport default DeleteConfirm;\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport { NumberInput } from 'components/form';\nimport { TodoType } from 'state/todos';\n\nconst ConditionalInputs: React.FC = () => {\n  const { watch } = useFormContext();\n  const todoType = watch('type');\n\n  return (\n    <>\n      {todoType === TodoType.TARGET && (\n        <NumberInput name=\"target\" integer />\n      )}\n    </>\n  );\n};\n\nexport default ConditionalInputs;\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n\n  '& .inner': {\n    position: 'relative',\n    backgroundColor: '#ffffff',\n    border: `1px solid ${theme.palette.primary}`,\n    borderRadius: 4,\n    color: theme.palette.primary,\n    padding: theme.padding.global,\n    paddingLeft: theme.padding.global * 2,\n    paddingRight: theme.padding.global * 2,\n    minHeight: theme.padding.global * 8,\n    fontWeight: 'bold',\n    marginBottom: theme.padding.global,\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    alignItems: 'center',\n\n    '& input': {\n      border: 'none',\n      color: 'inherit',\n      font: 'inherit',\n      fontSize: 'inherit',\n      fontWeight: 'inherit',\n      boxSizing: 'border-box',\n      outline: 'none',\n      padding: 0,\n      borderBottom: '1px solid rgba(0,0,0,.25)',\n      transfrom: 'translate(0, 1px)',\n    },\n  },\n\n  '& .actions': {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridColumnGap: theme.padding.global,\n    marginTop: theme.padding.global,\n  }\n});\n\nexport const cancelBtnStyle = (theme: Theme): CSSObject => ({\n  backgroundColor: theme.palette.danger,\n  color: theme.palette.dangerOffset,\n});","import React from 'react';\nimport { ITodo, TodoType } from 'state/todos';\nimport { Button } from 'components';\nimport {\n  Form,\n  Input,\n  Select,\n  SubmitButton\n} from 'components/form';\nimport ConditionalInputs from './ConditionalInputs';\nimport style, { cancelBtnStyle} from './TodoForm.style';\nimport { DeepPartial } from 'react-hook-form';\n\ntype FormValues = Omit<ITodo, 'completed'>;\n\nexport interface ITodoFormProps {\n  onSubmit?: (values: FormValues) => void;\n  onCancel?: () => void;\n  defaultValues?: DeepPartial<FormValues>;\n}\n\nconst TodoForm: React.FC<ITodoFormProps> = ({\n  defaultValues,\n  onCancel,\n  onSubmit,\n}) => {\n  return (\n    <div css={style}>\n      {/* TODO: style. have inputs wrapped like todo, but submit/cancel underneath */}\n      <Form<FormValues>\n        defaultValues={defaultValues}\n        onSubmit={onSubmit}\n      >\n        <div className=\"inner form\">\n          {/* TODO: change to select */}\n          <div className=\"title\">\n            <Input name=\"title\" placeholder=\"Todo Title\" />\n          </div>\n          <div className=\"content\">\n            <Select\n              name=\"type\"\n              options={[\n                { value: TodoType.BASIC, label: 'Basic Todo' },\n                { value: TodoType.MULTIPLE, label: 'Multiple Todo' },\n                { value: TodoType.TARGET, label: 'Target Count Todo' },\n              ]}\n            />\n            <ConditionalInputs />\n          </div>\n        </div>\n        <div className=\"actions\">\n          <Button onClick={onCancel} css={cancelBtnStyle}>\n            Cancel\n          </Button>\n          <SubmitButton>\n            Save\n          </SubmitButton>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default TodoForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'state';\nimport { ThemeProvider } from 'emotion-theming';\nimport theme from 'theme';\nimport App from './App';\n\nconst store = createStore()\n\nconst renderApp = (Component: React.ComponentType) =>\n  ReactDOM.render(\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Component />\n      </ThemeProvider>\n    </Provider>,\n    document.getElementById('root') as HTMLElement\n  )\n\nrenderApp(App)\n\n// 🔥 HMR 🔥\nif ((module as any).hot) {\n  (module as any).hot.accept('./App.tsx', () => {\n    const NextApp = require('./App.tsx').default\n    console.log('🔥🔥🔥 HMR Update 🔥🔥🔥')\n\n    renderApp(NextApp)\n  })\n}\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n  display: 'flex',\n  justifyContent: 'flex-end',\n\n  '& .icon': {\n    fontSize: 28,\n    marginLeft: theme.padding.global,\n  },\n\n  '& .check': {\n    color: 'rgba(0,0,0, 0.25)',\n    display: 'flex',\n    alignItems: 'center',\n\n    '&.complete': {\n      color: theme.palette.success,\n    },\n  },\n\n  '& .multiple, & .target': {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n});\n","import React from 'react';\nimport cx from 'classnames';\nimport { TodoType, ITodo } from 'state/todos';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport style from './TodoComplete.style';\n\nconst TodoComplete: React.FC<ITodo> = ({\n  type,\n  completed,\n  target = 0,\n}) => {\n\n  return (\n    <div css={style}>\n      {type === TodoType.BASIC && (\n        <div className={cx('icon check', { complete: completed > 0})}>\n          <FaCheckCircle />\n        </div>\n      )}\n      {type === TodoType.MULTIPLE && (\n        <div className={cx('multiple', { complete: completed > 0})}>\n          {completed < 6 ? Array.from({ length: completed }).map((_, idx) => (\n            <div key={idx} className=\"icon check complete\">\n              <FaCheckCircle />\n            </div>\n          ))\n          : (\n            <>\n              <div className=\"count icon check complete\">{completed}</div>\n              <div className=\"icon check complete\">\n                <FaCheckCircle />\n              </div>\n            </>\n          )}\n        </div>\n      )}\n      {type === TodoType.TARGET && (\n        <div className={cx('target', { complete: completed >= target })}>\n          {target < 6 ? Array.from({ length: target }).map((_, idx) => (\n            <div key={idx} className={cx('icon check', { complete: idx >= (target - completed) })}>\n              <FaCheckCircle />\n            </div>\n          )) : (\n            <>\n              <div className={cx('count icon check', { complete: completed >= target })}>\n                {Math.min(completed, target)} / {target}\n              </div>\n              <div className={cx('count icon check', { complete: completed >= target })}>\n                <FaCheckCircle />\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoComplete;\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n\n  '& .inner': {\n    position: 'relative',\n    backgroundColor: '#ffffff',\n    border: `1px solid ${theme.palette.primary}`,\n    borderRadius: 4,\n    color: theme.palette.primary,\n    padding: theme.padding.global,\n    paddingLeft: theme.padding.global * 2,\n    paddingRight: theme.padding.global * 2,\n    minHeight: theme.padding.global * 8,\n    fontWeight: 'bold',\n    marginBottom: theme.padding.global,\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    alignItems: 'center',\n  },\n\n  '& .inner.view': {\n    cursor: 'pointer',\n  },\n\n  '& .manage .actions': {\n    display: 'flex',\n    justifyContent: 'flex-end',\n\n    '& button': {\n      padding: 0,\n      width: 32,\n      height: 32,\n      paddingLeft: theme.padding.global,\n      paddingRight: theme.padding.global,\n      marginLeft: theme.padding.global,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }\n  }\n});\n\nexport const deleteBtn = (theme: Theme): CSSObject => ({\n  backgroundColor: theme.palette.danger,\n  color: theme.palette.dangerOffset,\n});\n\nexport const resetBtn = (theme: Theme): CSSObject => ({\n  backgroundColor: theme.palette.warning,\n  color: theme.palette.warningOffset,\n});\n","import React from 'react';\nimport { ITodo } from 'state/todos';\nimport { FaEdit, FaEraser, FaTimes } from 'react-icons/fa';\nimport { Button, DeleteConfirm } from 'components';\nimport TodoForm from 'components/TodoForm/TodoForm';\nimport { useTodo, TodoDisplay } from './useTodo';\nimport TodoComplete from './TodoComplete';\nimport style, { deleteBtn, resetBtn } from './Todo.style';\n\nexport interface ITodoProps extends ITodo {\n  index: number;\n}\n\n/**\n * Basic Todo item wrapper.\n * Handles basic rendering and functionality.\n * Further todo type behavior is handled by nested components\n */\nconst Todo: React.FC<ITodoProps> = ({\n  index,\n}) => {\n  const {\n    title,\n    completed,\n    type,\n    target,\n    display,\n    complete,\n    edit,\n    cancelEdit,\n    update,\n    deleteTodo,\n    resetTodo,\n  } = useTodo(index);\n\n  // Condtionally display depending on manage/edit status\n  return (\n    <div className=\"todo\" css={style}>\n      {display === TodoDisplay.VIEW && (\n        <div className=\"inner view\" onClick={complete}>\n          <div className=\"title\">{title}</div>\n          <TodoComplete\n            title={title}\n            type={type}\n            completed={completed}\n            target={target}\n          />\n        </div>\n      )}\n      {display === TodoDisplay.MANAGE && (\n        <div className=\"inner manage\">\n          <div className=\"title\">{title}</div>\n          <div className=\"actions\">\n            <DeleteConfirm onClick={deleteTodo} css={deleteBtn} message={`Delete \"${title}\" todo?`}>\n              <FaTimes />\n            </DeleteConfirm>\n            <DeleteConfirm onClick={resetTodo} css={resetBtn} message={`Reset \"${title}\" todo?`}>\n              <FaEraser />\n            </DeleteConfirm>\n            <Button onClick={edit}>\n              <FaEdit />\n            </Button>\n          </div>\n        </div>\n      )}\n      {display === TodoDisplay.EDIT && (\n        <TodoForm\n          onSubmit={update}\n          onCancel={cancelEdit}\n          defaultValues={{ title, type, target }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Todo;\n","import { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nexport default (theme: Theme): CSSObject => ({\n  position: 'relative',\n  marginTop: theme.padding.global,\n});\n\nexport const addBtnStyle = (theme: Theme): CSSObject => ({\n  backgroundColor: theme.palette.success,\n  color: theme.palette.successOffset,\n});","import React, { useState, useCallback } from 'react';\nimport { Button } from 'components';\nimport TodoForm from 'components/TodoForm/TodoForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ITodo, TodoType, actions, selectors } from 'state/todos';\nimport style, { addBtnStyle } from './AddTodo.style';\n\ntype FormValues = Omit<ITodo, 'completed'>;\n\n/**\n * AddTodo button/form\n */\nconst AddTodo: React.FC = () => {\n  const editing = useSelector(selectors.getEditing);\n  const disabled = editing !== undefined;\n\n  const dispatch = useDispatch();\n  const [isAdding, setAdding] = useState(false);\n  const edit = useCallback(() => setAdding(true), [setAdding]);\n  const cancel = useCallback(() => setAdding(false), [setAdding]);\n  const addNewTodo = useCallback((values: FormValues) => {\n    dispatch(actions.addTodo(values));\n    setAdding(false);\n  }, [dispatch, setAdding]);\n\n  return (\n    <div css={style}>\n      {(isAdding && !disabled) ? (\n        <TodoForm\n          defaultValues={{ type: TodoType.BASIC }}\n          onSubmit={addNewTodo}\n          onCancel={cancel}\n        />\n      ) : (\n        <Button css={addBtnStyle} onClick={edit} disabled={disabled}>\n          +\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container } from 'components';\nimport Todo from 'components/Todo/Todo';\nimport AddTodo from 'components/AddTodo/AddTodo';\nimport { selectors } from 'state/todos';\nimport { CSSObject } from '@emotion/core';\nimport { Theme } from 'theme';\n\nconst style = (theme: Theme): CSSObject => ({\n  paddingTop: theme.padding.global,\n});\n\nconst HomePage = () => {\n  const isManaging = useSelector(selectors.getManaging);\n  const todos = useSelector(selectors.getTodos);\n\n  return (\n    <Container>\n      <div css={style} className=\"todo-list\">\n        {todos.length === 0 && (\n          <div>\n            Add Todos Messaging\n          </div>\n        )}\n        {todos.map((todo, index) => (\n          <Todo key={index} {...todo} index={index} />\n        ))}\n        {isManaging && <AddTodo />}\n      </div>\n    </Container>\n  )\n};\n\nexport default HomePage;\n","import React from 'react';\nimport GlobalStyle from 'theme/global.style';\nimport {\n  Layout,\n  RouteSwitch,\n} from 'components';\n\nimport {\n  HOME_PAGE,\n} from 'routes'\n\nimport HomePage from 'pages/HomePage/HomePage';\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <div className=\"app\">\n        <Layout>\n          <RouteSwitch\n            routes={{\n              [HOME_PAGE]: HomePage,\n            }}\n          />\n        </Layout>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import {\n  applyMiddleware,\n  createStore as createReduxStore,\n} from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk'\nimport { routeEnhancer, routerMiddleware } from 'routes';\nimport rootReducer from './root-reducer';\nimport { persistTodosMiddleware } from './persistTodosMiddleware';\n\n// Configured createStore\nexport const createStore = () => {\n  const store = createReduxStore(\n    rootReducer,\n    composeWithDevTools(\n      routeEnhancer,\n      applyMiddleware(\n        routerMiddleware,\n        thunk,\n        persistTodosMiddleware,\n      )\n    )\n  );\n\n  return store;\n};\n"],"sourceRoot":""}